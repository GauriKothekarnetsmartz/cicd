{"ast":null,"code":"var _jsxFileName = \"/home/gauri/Notes-fullstack-app/notes-ui/src/components/Content.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      note: [],\n      notenumber: null,\n      err: null,\n      isLoading: false\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    let api_url = 'http://localhost:4006/notecontent?id=' + this.props.match.params.id;\n    fetch(api_url).then(res => {\n      if (res.status >= 400) {\n        throw new Error(\"Server responds with error!\");\n      }\n      return res.json();\n    }).then(note => {\n      this.setState({\n        note,\n        isLoading: false\n      });\n    }, err => {\n      this.setState({\n        err,\n        isLoading: false\n      });\n    });\n  }\n  renderNoteContent() {\n    return this.state.note.map((note, index) => {\n      const {\n        NoteID,\n        createdAt,\n        noteversions\n      } = note; //destructuring\n      let title = noteversions[0].title;\n      let update = noteversions[0].updatedAt;\n      let content = noteversions[0].content;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"notes\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: NoteID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: update\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 25\n              }, this)]\n            }, NoteID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"return\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        class: \"link\",\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Back to list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), this.renderNoteContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this);\n  }\n}\nexport default Content;","map":{"version":3,"names":["React","Component","Link","jsxDEV","_jsxDEV","Content","constructor","props","state","note","notenumber","err","isLoading","componentDidMount","setState","api_url","match","params","id","fetch","then","res","status","Error","json","renderNoteContent","map","index","NoteID","createdAt","noteversions","title","update","updatedAt","content","children","fileName","_jsxFileName","lineNumber","columnNumber","render","class","to"],"sources":["/home/gauri/Notes-fullstack-app/notes-ui/src/components/Content.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\n\nclass Content extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            note: [],\n            notenumber:null,\n            err: null,\n            isLoading: false\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ isLoading: true })\n        let api_url = 'http://localhost:4006/notecontent?id='+this.props.match.params.id;\n        fetch(api_url)\n            .then(res => {\n                if(res.status >= 400) {\n                    throw new Error(\"Server responds with error!\");\n                }\n                return res.json();\n            })\n            .then(note => {\n                    this.setState({\n                        note,\n                        isLoading: false\n                    })\n\n                },\n                err => {\n                    this.setState({\n                        err,\n                        isLoading: false\n                    })\n                });\n    }\n\n\n\n\n    renderNoteContent() {\n        return this.state.note.map((note, index) => {\n            const { NoteID, createdAt, noteversions } = note //destructuring\n            let title = noteversions[0].title\n            let update = noteversions[0].updatedAt\n            let content = noteversions[0].content\n            return (\n                <div>\n                <table id='notes'>\n                    <tbody>\n\n                    <tr key={NoteID}>\n                        <th>{NoteID}</th>\n                        <th>{title}</th>\n                        <th>{createdAt}</th>\n                        <th>{update}</th>\n                    </tr>\n                    </tbody>\n                </table>\n                <div id='content'>\n                    <h1>{title}</h1>\n                    {content}\n                </div>\n                </div>\n            )\n        })\n\n    }\n\n    render() {\n\n        return (\n                <div class='return'>\n                    <Link class='link' to={\"/\"}><h1> Back to list</h1></Link>\n                    {this.renderNoteContent()}\n                </div>\n        )\n    }\n}\n\nexport default Content"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,SAASJ,SAAS,CAAC;EAC5BK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAC,IAAI;MACfC,GAAG,EAAE,IAAI;MACTC,SAAS,EAAE;IACf,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACC,QAAQ,CAAC;MAAEF,SAAS,EAAE;IAAK,CAAC,CAAC;IAClC,IAAIG,OAAO,GAAG,uCAAuC,GAAC,IAAI,CAACR,KAAK,CAACS,KAAK,CAACC,MAAM,CAACC,EAAE;IAChFC,KAAK,CAACJ,OAAO,CAAC,CACTK,IAAI,CAACC,GAAG,IAAI;MACT,IAAGA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDJ,IAAI,CAACX,IAAI,IAAI;MACN,IAAI,CAACK,QAAQ,CAAC;QACVL,IAAI;QACJG,SAAS,EAAE;MACf,CAAC,CAAC;IAEN,CAAC,EACDD,GAAG,IAAI;MACH,IAAI,CAACG,QAAQ,CAAC;QACVH,GAAG;QACHC,SAAS,EAAE;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACd;EAKAa,iBAAiBA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACjB,KAAK,CAACC,IAAI,CAACiB,GAAG,CAAC,CAACjB,IAAI,EAAEkB,KAAK,KAAK;MACxC,MAAM;QAAEC,MAAM;QAAEC,SAAS;QAAEC;MAAa,CAAC,GAAGrB,IAAI,EAAC;MACjD,IAAIsB,KAAK,GAAGD,YAAY,CAAC,CAAC,CAAC,CAACC,KAAK;MACjC,IAAIC,MAAM,GAAGF,YAAY,CAAC,CAAC,CAAC,CAACG,SAAS;MACtC,IAAIC,OAAO,GAAGJ,YAAY,CAAC,CAAC,CAAC,CAACI,OAAO;MACrC,oBACI9B,OAAA;QAAA+B,QAAA,gBACA/B,OAAA;UAAOc,EAAE,EAAC,OAAO;UAAAiB,QAAA,eACb/B,OAAA;YAAA+B,QAAA,eAEA/B,OAAA;cAAA+B,QAAA,gBACI/B,OAAA;gBAAA+B,QAAA,EAAKP;cAAM;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjBnC,OAAA;gBAAA+B,QAAA,EAAKJ;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAChBnC,OAAA;gBAAA+B,QAAA,EAAKN;cAAS;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpBnC,OAAA;gBAAA+B,QAAA,EAAKH;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAJZX,MAAM;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACRnC,OAAA;UAAKc,EAAE,EAAC,SAAS;UAAAiB,QAAA,gBACb/B,OAAA;YAAA+B,QAAA,EAAKJ;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACfL,OAAO;QAAA;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAEd,CAAC,CAAC;EAEN;EAEAC,MAAMA,CAAA,EAAG;IAEL,oBACQpC,OAAA;MAAKqC,KAAK,EAAC,QAAQ;MAAAN,QAAA,gBACf/B,OAAA,CAACF,IAAI;QAACuC,KAAK,EAAC,MAAM;QAACC,EAAE,EAAE,GAAI;QAAAP,QAAA,eAAC/B,OAAA;UAAA+B,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACxD,IAAI,CAACd,iBAAiB,CAAC,CAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAElB;AACJ;AAEA,eAAelC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}